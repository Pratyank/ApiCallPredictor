[tool:pytest]
# Configuration for opensesame-predictor testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --tb=short
    --strict-markers
    --strict-config
    --verbose
    --color=yes
    --durations=10
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-branch
    --cov-fail-under=85

# Test markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, dependencies)
    performance: Performance and load tests (very slow)
    security: Security and penetration tests
    docker: Docker container tests (requires docker)
    slow: Slow tests (excluded by default)
    asyncio: Async tests

# Async configuration
asyncio_mode = auto

# Test selection
# Run fast tests by default, excluding slow markers
collect_ignore =
    "tests/performance/",
    "tests/docker/"


# Minimum version requirements
minversion = 7.0

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */node_modules/*

[coverage:report]
precision = 2
skip_covered = False
show_missing = True
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
